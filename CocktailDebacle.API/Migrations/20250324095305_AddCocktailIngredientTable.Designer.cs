// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CocktailDebacle.API.Migrations
{
    [DbContext(typeof(CocktailDbContext))]
    [Migration("20250324095305_AddCocktailIngredientTable")]
    partial class AddCocktailIngredientTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cocktail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("GlassType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Cocktails");
                });

            modelBuilder.Entity("CocktailIngredient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Measure")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CocktailId")
                        .HasColumnType("int");

                    b.HasKey("Name", "Measure");

                    b.HasIndex("CocktailId");

                    b.ToTable("CocktailIngredient");
                });

            modelBuilder.Entity("CocktailUser", b =>
                {
                    b.Property<int>("FavoriteByUsersId")
                        .HasColumnType("int");

                    b.Property<int>("FavoriteCocktailsId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteByUsersId", "FavoriteCocktailsId");

                    b.HasIndex("FavoriteCocktailsId");

                    b.ToTable("UserFavoriteCocktails", (string)null);
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AppPermissions")
                        .HasColumnType("bit");

                    b.PrimitiveCollection<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanDrinkAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(58)
                        .HasColumnType("nvarchar(58)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cocktail", b =>
                {
                    b.HasOne("User", "CreatedByUser")
                        .WithMany("CreatedCocktails")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("CocktailIngredient", b =>
                {
                    b.HasOne("Cocktail", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("CocktailId");
                });

            modelBuilder.Entity("CocktailUser", b =>
                {
                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("FavoriteByUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cocktail", null)
                        .WithMany()
                        .HasForeignKey("FavoriteCocktailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocktail", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("CreatedCocktails");
                });
#pragma warning restore 612, 618
        }
    }
}
